upstream zr_cluster {
    server 127.0.0.1:8001;
    server 127.0.0.1:8002;
    server 127.0.0.1:8003;
    server 127.0.0.1:8004;
    server 127.0.0.1:8010;
}

upstream cluster {
    server 127.0.0.1:8005;
    server 127.0.0.1:8006;
    server 127.0.0.1:8007;
    server 127.0.0.1:8008;
    server 127.0.0.1:8009;
}

upstream go_fcgi_tcp {
    server 127.0.0.1:9001;
    keepalive 300;
}


map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}

server {


    charset utf-8;
    client_max_body_size 100M;
    listen 80;



    gzip              on;
    gzip_http_version 1.0;
    gzip_min_length  1100;
    #gzip_min_length  256;
    gzip_buffers  4 32k;
    gzip_vary on;
    gzip_proxied      any;
    gzip_comp_level   9;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types text/xml 
               text/comma-separated-values
               text/javascript
               application/atom+xml
               application/javascript
               application/json
               application/ld+json
               application/manifest+json
               application/rss+xml
               application/vnd.geo+json
               application/vnd.ms-fontobject
               application/x-font-ttf
               application/x-web-app-manifest+json
               application/xhtml+xml
               application/xml
               font/opentype
               image/bmp
               image/svg+xml
               image/x-icon
               text/cache-manifest
               text/css
               text/plain
               text/vcard
               text/vnd.rim.location.xloc
               text/vtt
               text/x-component
               text/x-cross-domain-policy;



    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
        # server_tokens off;

    expires $expires;
    #pagespeed on;
    #pagespeed FileCachePath "/var/cache/ngx_pagespeed/";
    #pagespeed RewriteLevel OptimizeForBandwidth;
    #pagespeed EnableFilters rewrite_javascript;
    #pagespeed UseExperimentalJsMinifier on;
    #pagespeed EnableFilters defer_javascript;
    #pagespeed EnableFilters extend_cache;
    #pagespeed EnableFilters convert_gif_to_png;
    #pagespeed EnableFilters convert_jpeg_to_progressive;
    #pagespeed EnableFilters rewrite_images;
#    pagespeed FetchHttps enable,allow_self_signed;

    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
           add_header "" "";
    }

    location ~ "^/pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }





    # side note: only use TLS since SSLv2 and SSLv3 have had recent vulnerabilities

    access_log /var/www/vhosts/divorcesus.com/logs/access_log;
    error_log  /var/www/vhosts/divorcesus.com/logs/error_log;
    server_name divorcesus.com;

    root /var/www/vhosts/divorcesus.com/divorces/;



    location ~* .+.>(xml|jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf) {
         access_log off;
         expires 30d;
         break;
    }


    location / {

         uwsgi_pass cluster;
         proxy_set_header X-Forwarded-Protocol $scheme;
         include /var/www/vhosts/divorcesus.com/conf/uwsgi_params;
         uwsgi_modifier1 30;
         proxy_set_header HTTP_AUTHORIZATION $http_authorization;
         proxy_set_header  X-Real-IP  $remote_addr;
         proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header  Host $http_host;
         proxy_redirect  off;
         uwsgi_read_timeout 900;

    }


    location = /favico.ico  {

            root /var/www/vhosts/divorcesus.com/divorces/favicon.ico;

    }

#    location = /robots.txt {
#               return 200 "User-agent: *\nDisallow: /";
#    }

    location = /robots.txt {
        alias /var/www/vhosts/divorcesus.com/divorces/robots.txt ;
    }

    location /media {
        alias /var/www/vhosts/divorcesus.com/divorces/media;
    }

    location /static {
        alias /var/www/vhosts/divorcesus.com/divorces/static;
    }

    location /images {
        alias /var/www/vhosts/divorcesus.com/divorces/images;
    }

    location /img {
       alias /var/www/vhosts/divorcesus.com/divorces/img;
    }
      
    location /blog/img/ {
       alias /var/www/vhosts/divorcesus.com/divorces/img;
    }
    location /blog/images/ {
       alias /var/www/vhosts/divorcesus.com/divorces/images;
    }



    # what to serve if upstream is not available or crashes
    error_page 500 502 503 504 /media/50x.html;

    location ~* .+.>(xml|jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf) {
         root /var/www/vhosts/divorcesus.com/divorces;
         access_log off;
         expires 30d;
         add_header Pragma public;
         add_header Cache-Control "public";
         break;
    }

    location ~* ^.+\.(js|css)$ {
        access_log off; log_not_found off;
    }

    #if ($scheme = http) {
    #    return 301 https://$server_name$request_uri;
    #}



    # Redirect non-https traffic to https
    #if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    #} # managed by Certbot


    # Redirect non-https traffic to https
    #if ($scheme == "https") {
    #     return 301 https://$host$request_uri;
    #} # managed 
    # global non-WWW HTTPS handler
    #if ($http_host = www.divorcesus.com){
    #    return 303 https://divorcesus.com$request_uri;
    #}


    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/divorcesus.com/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/divorcesus.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    location ~*  \.(jpg|jpeg|png|gif|ico|css|sass|less|js|svg|json|woff|woff2|xml|vue|vue2)$ {
        expires 7d;
    }

    location ~*  \.(pdf)$ {
        expires 30d;
    }

}

server {
    listen       80;
    server_name  www.divorcesus.com;
    return       301 http://divorcesus.com$request_uri;
}

server {
    listen 80;

    server_name _;

    return 301 https://$host$request_uri;
}
